# HG changeset patch
# User Andreas Obergschwandtner <andreas.obergschwandtner@skidata.com>
# Date 1534928526 -7200
#      Wed Aug 22 11:02:06 2018 +0200
# Node ID 96d06a5c27f84a4d48cff0d927cf377866db894e
# Parent  a456d0771ba0f6604b172f05f0b594178f7cc49c
Handle format-overflow warning for GCC >= 7

diff --git openjdk/hotspot/src/share/vm/adlc/output_c.cpp openjdk/hotspot/src/share/vm/adlc/output_c.cpp
--- openjdk/hotspot/src/share/vm/adlc/output_c.cpp
+++ openjdk/hotspot/src/share/vm/adlc/output_c.cpp
@@ -462,9 +462,11 @@
   for (i = maxcycleused; i > 0; i /= 10)
     cycledigit++;
 
-  int maskdigit = 0;
-  for (i = rescount; i > 0; i /= 10)
+  int maskdigit = 1;
+  for (i = rescount / 10; i > 0; i /= 10)
     maskdigit++;
+  if (maskdigit > 10)
+    maskdigit = 10;
 
   static const char * pipeline_use_cycle_mask = "Pipeline_Use_Cycle_Mask";
   static const char * pipeline_use_element    = "Pipeline_Use_Element";
diff --git openjdk/hotspot/src/share/vm/code/dependencies.cpp openjdk/hotspot/src/share/vm/code/dependencies.cpp
--- openjdk/hotspot/src/share/vm/code/dependencies.cpp
+++ openjdk/hotspot/src/share/vm/code/dependencies.cpp
@@ -429,6 +429,12 @@
   Dependencies::write_dependency_to(log, dept, nargs, ciargs, witness);
 }
 
+// disable format overflow checking for GCC versions > 7 because the lead to
+// a false positive in this case.
+// See https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
+#if defined (__GNUC__) && __GNUC__ >= 7
+#pragma GCC diagnostic ignored "-Wformat-overflow"
+#endif
 void Dependencies::write_dependency_to(CompileLog* log,
                                        DepType dept,
                                        int nargs, ciObject* args[],
diff --git openjdk/hotspot/src/share/vm/adlc/dfa.cpp openjdk/hotspot/src/share/vm/adlc/dfa.cpp
index af18bee1..075e7c49 100644
--- openjdk/hotspot/src/share/vm/adlc/dfa.cpp
+++ openjdk/hotspot/src/share/vm/adlc/dfa.cpp
@@ -25,6 +25,12 @@
 // DFA.CPP - Method definitions for outputting the matcher DFA from ADLC
 #include "adlc.hpp"

+// disable format overflow checking for GCC versions > 7
+// See https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
+#if defined (__GNUC__) && __GNUC__ >= 7
+#pragma GCC diagnostic ignored "-Wstringop-overflow"
+#endif
+
 //---------------------------Switches for debugging output---------------------
 static bool debug_output   = false;
 static bool debug_output1  = false;    // top level chain rules
diff --git openjdk/hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp openjdk/hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp
index ba484b9f..2bb51142 100644
--- openjdk/hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp
+++ openjdk/hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp
@@ -95,6 +95,12 @@
 #define SPELL_REG_FP "ebp"
 #endif // AMD64

+// disable warning about return type for GCC version > 7
+// See https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
+#if defined (__GNUC__) && __GNUC__ >= 7
+#pragma GCC diagnostic ignored "-Wreturn-type"
+#endif
+
 address os::current_stack_pointer() {
 #ifdef SPARC_WORKS
   register void *esp;
diff --git openjdk/hotspot/src/share/vm/runtime/os.cpp openjdk/hotspot/src/share/vm/runtime/os.cpp
index ddf4a50e..8f76b445 100644
--- openjdk/hotspot/src/share/vm/runtime/os.cpp
+++ openjdk/hotspot/src/share/vm/runtime/os.cpp
@@ -63,6 +63,13 @@

 # include <signal.h>

+// disable warning about stringop overflow for GCC version > 7
+// See https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
+#if defined (__GNUC__) && __GNUC__ >= 7
+#pragma GCC diagnostic ignored "-Wstringop-overflow"
+#endif
+
+
 OSThread*         os::_starting_thread    = NULL;
 address           os::_polling_page       = NULL;
 volatile int32_t* os::_mem_serialize_page = NULL;
